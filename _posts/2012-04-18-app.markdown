---
layout: default
title: Rails Girls App Tutorial
permalink: app
---

# Rails Girls App Tutorial

*Created by Vesa Vänskä, [@vesan](https://twitter.com/vesan)*
      

[**Для начала, убедитесь в том, что у вас установлен Ruby и Rails, противном случае перейдите по этой ссылке..**](/install)


## Шаг 0: Знакомство с инструментами разработки

* Текстовый редактор: (Gedit, Vim, Emacs, Komodo Edit, Sublime Text) примеры тексовых редакторов, которые вы можете использовать для написания кода и редактирования файлов.
* Terminal / CMD -  коммандная строка, где вы можете запустить rails сервер и выполнять команды.
* Веб браузер: (Firefox, Safari, Chrome) - средство для отображения вашего приложения.


## Шаг 1: Создание приложения

Мы будем создавать приложение под названием *railsgirls*.

Сначала, откроем 'Командную Строку':

* OS X: Откроте Spotlight, введите *Terminal* и кликните на появившейся опции *Terminal*.
* Windows: Откройте меню "Пуск" и кликните на *Command Prompt with Ruby on Rails*.
* Linux: Откройте Терминал с помощью сочетания клавиш 'Ctrl+Alt+T'

Далее, введите следующие команды:

{% highlight sh %}
mkdir projects
cd projects
rails new railsgirls
cd railsgirls
rails s
{% endhighlight %}

Откройте ссылку [http://localhost:3000](http://localhost:3000) в веб браузере.

В коммандной строке нажмите сочетание клавиш Ctrl+C для остановки сервера.

**Тренер:** Краткое объяснение, что делает каждая из команд. Что было сгенерировано? Что делает сервер.


## Шаг 2: Создание scaffold&#8217;а для идей

Воспользуемся Rails&#8217; scaffold&#8217;ом для генерирования основы, которая позволит пролистать, добавить, удалить, редактировать и просматривать, в нашем случае, идеи.

**Тренер:** Что такое scaffold (1. команда, 2. имя модели и связь с таблицей БД ; плюрализация/именование, 3. аттрибуты и типы)? Что такое миграции, в каких случаях они необходимы и зачем?

{% highlight sh %}
rails generate scaffold idea name:string description:text picture:string
rake db:migrate
rails s
{% endhighlight %}

Откройте ссылку [http://localhost:3000/ideas](http://localhost:3000/ideas) в веб браузере.

После небольшого просмотра, остановите сервер (сочетание клавиш Ctrl+C в коммандной строке)

## Шаг 3: Дизайн

**Coach:** Talk about the relationship of HTML and Rails; what part of views is HTML and what is Embedded Ruby (ERB)? How does this relate to MVC (models and controllers control the logic of dynamically generating HTML, or views)?

Дизайн не выглядит прекрасным. Давайте сделаем с эти что-нибудь. Мы используем Twitter Bootstrap проект для получения милых стилей.

Откройте app/views/layouts/application.html.erb и добавьте выше этого

{% highlight erb %}
<%= stylesheet_link_tag "application" %>
{% endhighlight %}

строку

{% highlight erb %}
<link rel="stylesheet" href="http://railsgirls.com/assets/bootstrap.css">
{% endhighlight %}

и замените

{% highlight erb %}
<%= yield %>
{% endhighlight %}

на

{% highlight erb %}
<div class="container">
    <%= yield %>
</div>
{% endhighlight %}

Давайте также добавим topbar и header, а также стили для них и таблицы идей.

Добавьте в application.html.erb после `<body>`:

{% highlight html %}
<div class="navbar navbar-fixed-top">
    <div class="navbar-inner">
        <div class="container">
            <a class="brand" href="/">The Idea app</a>
            <ul class="nav">
                <li class="active"><a href="/ideas">Ideas</a></li>
            </ul>
        </div>
    </div>
</div>
{% endhighlight %}

и перед `</body>`:

{% highlight html %}
<footer>
    <div class="container">
        Rails Girls 2012
    </div>
</footer>
{% endhighlight %}

Откройте app/assets/stylesheets/application.css и добавьте в конец:

{% highlight css %}
#logo { 
    font-size: 20px;
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    float: left;
    padding: 10px;
}
body { padding-top: 100px; }
footer { margin-top: 100px; }
table, td, th { vertical-align: middle !important; border: none !important; }
th { border-bottom: 1px solid #DDD !important; }
td.picture { width: 140px; }
td.picture img { width: 140px; }
{% endhighlight %}

**Coach:** Немного расскажите о CSS и шаблонах.


## Шаг 4: Добавление загрузки изображений.

Нам наобходимо установить библиотеку для добавления возможности работы с изображниями.

Откройте Gemfile в проекте и добавьте

{% highlight ruby %}
gem 'carrierwave'
{% endhighlight %}

ниже линии

{% highlight ruby %}
gem 'sqlite3'
{% endhighlight %}

**Coach:** Расскажите, что такое библиотеки и почему мы их используем. Может быть, несколько слов о OpenSource?

Теперь мы сгенерируем необходимый код для захвата изображений. ВЗапустите в терминале:

{% highlight sh %}
bundle
{% endhighlight %}

**В этот момент вы должны перезапустить Rails сервер из командой строки.** Это необходимо для того, чтобы приложение загрузило добавленный gem.

После этого вы можете добавить возможность загрузки изображений, выполнив комманду:

{% highlight sh %}
rails generate uploader Picture
{% endhighlight %}

Откройте app/models/idea.rb и добавьте

{% highlight ruby %}
mount_uploader :picture, PictureUploader
{% endhighlight %}

ниже строки

{% highlight ruby %}
class Idea < ActiveRecord::Base
{% endhighlight %}

Откройте app/views/ideas/_form.html.erb и измените

{% highlight erb %}
<%= f.text_field :picture %>
{% endhighlight %}

на

{% highlight erb %}
<%= f.file_field :picture %>
{% endhighlight %}

а также

{% highlight erb %}
<%= form_for(@idea) do |f| %>
{% endhighlight %}

на

{% highlight erb %}
<%= form_for(@idea, :html => {:multipart => true}) do |f| %>
{% endhighlight %}

Шаблон невыглядит неприятным, он только лишь показывает путь к файлу. Ну, давайте исправим это.

Откройте app/views/ideas/show.html.erb и измените

{% highlight erb %}
<%= @idea.picture %>
{% endhighlight %}

на

{% highlight erb %}
<%= image_tag(@idea.picture_url, :width => 600) if @idea.picture.present? %>
{% endhighlight %}

**Coach:** Расскажите немного о HTML.


## Step 5: Finetune the routes

If you try to open [http://localhost:3000](http://localhost:3000) it still shows the default page. Let&#8217;s make it redirect to the ideas page.

On OS X and Linux, in the Terminal run:

{% highlight sh %}
rm public/index.html
{% endhighlight %}

In Windows, in the Command Prompt run:

{% highlight bat %}
del public\index.html
{% endhighlight %}

Then open config/routes.rb and add the following after the first line:

{% highlight ruby %}
root :to => redirect("/ideas")
{% endhighlight %}

**Coach:** Talk about routes.


## What next?

* Add design using HTML &amp; CSS
* Add ratings
* Use CoffeeScript (or JavaScript) to add interaction
* Add proper picture resizing to make loading the pictures faster
      

## Дополнительные гайды

* GUIDE 1: [Add commenting by Janika Liiv](/commenting)
* GUIDE 2: [Put your app online with Heroku by Terence Lee](/heroku)
